<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>图书管理系统</title>
    <url>/2020/06/13/c-c-practice02/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>-C/C++实战</tag>
      </tags>
  </entry>
  <entry>
    <title>学生成绩管理系统</title>
    <url>/2020/06/13/c-c-practice01/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>-C/C++实战 -C/C++训练 -C/C++ -系统</tag>
      </tags>
  </entry>
  <entry>
    <title>职工管理系统</title>
    <url>/2020/06/11/hello-world/</url>
    <content><![CDATA[<p>我们在入门C++后都会自己设计一个系统，来检验自己的c++基础是否牢固。而博主最近在某站上跟着黑马一起看视频学习c++，其中有个职员管理系统，博主也跟着敲了一下，接下来让我们一起来看看程序吧。</p>
<p>在设计一个系统之前我们应该思考系统的结构，系统的功能以及客户的需求等等。我设计的这个系统有以下功能：添加职员信息，查询职员信息，删除职员信息，修改职员信息，显示职员信息，排序，退出以及清空数据。</p>
<p>接下来直接上代码：</p>
<p>下面展示 文件存放目录。</p>
<p><img src="/images/head.png" alt="alt"></p>
<h2 id="头文件展示"><a href="#头文件展示" class="headerlink" title="头文件展示"></a>头文件展示</h2><h3 id="boss-h文件"><a href="#boss-h文件" class="headerlink" title="boss.h文件"></a>boss.h文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#pragma once</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include "worker.h"</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class boss:public worker</span><br><span class="line">&#123;</span><br><span class="line">	public:</span><br><span class="line">		boss(int num,string name,int id);</span><br><span class="line">		virtual void show();</span><br><span class="line">		virtual string get_id();</span><br><span class="line">		</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="manage-h文件"><a href="#manage-h文件" class="headerlink" title="manage.h文件"></a>manage.h文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#pragma once</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include "worker.h"</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class manage:public worker</span><br><span class="line">&#123;</span><br><span class="line">	public:</span><br><span class="line">		manage(int num,string name,int id);</span><br><span class="line">		virtual void show();</span><br><span class="line">		virtual string get_id();</span><br><span class="line">		</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<h3 id="employee-h文件"><a href="#employee-h文件" class="headerlink" title="employee.h文件"></a>employee.h文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#pragma once</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include "worker.h"</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class employee:public worker</span><br><span class="line">&#123;</span><br><span class="line">	public:</span><br><span class="line">		employee(int num,string name,int id);</span><br><span class="line">		virtual void show();</span><br><span class="line">		virtual string get_id();</span><br><span class="line">		</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<h3 id="workmanage-h文件"><a href="#workmanage-h文件" class="headerlink" title="workmanage.h文件"></a>workmanage.h文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#pragma once</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fstream&gt;</span></span><br><span class="line"><span class="comment">#include "worker.h"</span></span><br><span class="line"><span class="comment">#include "employee.h"</span></span><br><span class="line"><span class="comment">#include "manage.h"</span></span><br><span class="line"><span class="comment">#include "boss.h"</span></span><br><span class="line"><span class="comment">#define FILENAME "empFile.txt"</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class workmanage</span><br><span class="line">&#123;</span><br><span class="line">	public:</span><br><span class="line">		void show_menu();</span><br><span class="line">		void exit_xt();</span><br><span class="line">		void add_xt();</span><br><span class="line">		void show_xt();</span><br><span class="line">		void save_xt();</span><br><span class="line">		void read_xt();</span><br><span class="line">		void get_num();</span><br><span class="line">		void sort_xt();</span><br><span class="line">		void clear_xt();</span><br><span class="line">		void find_xt();</span><br><span class="line">		void delete_xt(); </span><br><span class="line">		void update_xt(); </span><br><span class="line">		workmanage();</span><br><span class="line">		~workmanage();</span><br><span class="line">		</span><br><span class="line">		int sum;</span><br><span class="line">		worker **m_array;</span><br><span class="line">		bool m_file;</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure>


<h3 id="worker-h文件"><a href="#worker-h文件" class="headerlink" title="worker.h文件"></a>worker.h文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#pragma once</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class worker</span><br><span class="line">&#123;</span><br><span class="line">	public:</span><br><span class="line">		virtual void show()=0;</span><br><span class="line">		virtual string get_id()=0;</span><br><span class="line">		virtual ~worker();</span><br><span class="line">		</span><br><span class="line">		int m_num;</span><br><span class="line">		string m_name;</span><br><span class="line">		int m_id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="源文件展示"><a href="#源文件展示" class="headerlink" title="源文件展示"></a>源文件展示</h2><h3 id="boss-cpp文件"><a href="#boss-cpp文件" class="headerlink" title="boss.cpp文件"></a>boss.cpp文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$// An highlighted block</span><br><span class="line"><span class="comment">#include "boss.h"</span></span><br><span class="line">/* run this program using the console pauser or add your own getch, system(<span class="string">"pause"</span>) or input loop */</span><br><span class="line"></span><br><span class="line">	boss::boss(int num,string name,int id)</span><br><span class="line">	&#123;</span><br><span class="line">		this-&gt;m_num=num;</span><br><span class="line">		this-&gt;m_name=name;</span><br><span class="line">		this-&gt;m_id=id;</span><br><span class="line">	&#125;</span><br><span class="line">	void boss::show()</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">"职工编号："</span>&lt;&lt; this-&gt;m_num </span><br><span class="line">			 &lt;&lt;<span class="string">"\t职工姓名："</span>&lt;&lt;this-&gt;m_name</span><br><span class="line">			 &lt;&lt;<span class="string">"\t职工部门："</span>&lt;&lt;this-&gt;get_id()</span><br><span class="line">			 &lt;&lt;endl; </span><br><span class="line">	&#125;</span><br><span class="line">	string boss::get_id()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">return</span> string(<span class="string">"老板"</span>); </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="manage-cpp文件"><a href="#manage-cpp文件" class="headerlink" title="manage.cpp文件"></a>manage.cpp文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#include "manage.h"</span></span><br><span class="line">/* run this program using the console pauser or add your own getch, system(<span class="string">"pause"</span>) or input loop */</span><br><span class="line"></span><br><span class="line">	manage::manage(int num,string name,int id)</span><br><span class="line">	&#123;</span><br><span class="line">		this-&gt;m_num=num;</span><br><span class="line">		this-&gt;m_name=name;</span><br><span class="line">		this-&gt;m_id=id;</span><br><span class="line">	&#125;</span><br><span class="line">	void manage::show()</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">"职工编号："</span>&lt;&lt; this-&gt;m_num </span><br><span class="line">			 &lt;&lt;<span class="string">"\t职工姓名："</span>&lt;&lt;this-&gt;m_name</span><br><span class="line">			 &lt;&lt;<span class="string">"\t职工部门："</span>&lt;&lt;this-&gt;get_id()</span><br><span class="line">			 &lt;&lt;endl; </span><br><span class="line">	&#125;</span><br><span class="line">	string manage::get_id()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">return</span> string(<span class="string">"经理"</span>); </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="employee-cpp文件"><a href="#employee-cpp文件" class="headerlink" title="employee.cpp文件"></a>employee.cpp文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#include "employee.h"</span></span><br><span class="line">/* run this program using the console pauser or add your own getch, system(<span class="string">"pause"</span>) or input loop */</span><br><span class="line"></span><br><span class="line">	employee::employee(int num,string name,int id)</span><br><span class="line">	&#123;</span><br><span class="line">		this-&gt;m_num=num;</span><br><span class="line">		this-&gt;m_name=name;</span><br><span class="line">		this-&gt;m_id=id;</span><br><span class="line">	&#125;</span><br><span class="line">	void employee::show()</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">"职工编号："</span>&lt;&lt; this-&gt;m_num </span><br><span class="line">			 &lt;&lt;<span class="string">"\t职工姓名："</span>&lt;&lt;this-&gt;m_name</span><br><span class="line">			 &lt;&lt;<span class="string">"\t职工部门："</span>&lt;&lt;this-&gt;get_id()</span><br><span class="line">			 &lt;&lt;endl; </span><br><span class="line">	&#125;</span><br><span class="line">	string employee::get_id()</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">return</span> string(<span class="string">"普通职工"</span>); </span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h3 id="main-cpp文件"><a href="#main-cpp文件" class="headerlink" title="main.cpp文件"></a>main.cpp文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#include "boss.h"</span></span><br><span class="line"><span class="comment">#include "employee.h"</span></span><br><span class="line"><span class="comment">#include "manage.h"</span></span><br><span class="line"><span class="comment">#include "worker.h"</span></span><br><span class="line"><span class="comment">#include "workmanage.h"</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int ch;</span><br><span class="line">	workmanage wm;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(1)</span><br><span class="line">	&#123;</span><br><span class="line">	wm.show_menu();</span><br><span class="line">	cout &lt;&lt; <span class="string">"请输入要进行的操作："</span>;</span><br><span class="line">	cin &gt;&gt; ch;</span><br><span class="line">	switch(ch)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> 1:wm.add_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 2:wm.show_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 3:wm.delete_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 4:wm.update_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 5:wm.sort_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 6:wm.clear_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 7:wm.find_xt();<span class="built_in">break</span>;</span><br><span class="line">		<span class="keyword">case</span> 0:wm.exit_xt();<span class="built_in">break</span>;</span><br><span class="line">		default:cout &lt;&lt;<span class="string">"输入错误！"</span>&lt;&lt;endl;</span><br><span class="line">	 &#125;</span><br><span class="line">	 system(<span class="string">"pause"</span>);</span><br><span class="line">	 system(<span class="string">"cls"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="workmanage-cpp文件"><a href="#workmanage-cpp文件" class="headerlink" title="workmanage.cpp文件"></a>workmanage.cpp文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // An highlighted block</span><br><span class="line"><span class="comment">#include "workmanage.h"</span></span><br><span class="line"></span><br><span class="line">workmanage::<span class="function"><span class="title">workmanage</span></span>()&#123;</span><br><span class="line">	fstream file;</span><br><span class="line">	char ch;</span><br><span class="line">	</span><br><span class="line">	file.open(FILENAME,ios::<span class="keyword">in</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(!file.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		this-&gt;sum=0;</span><br><span class="line">		this-&gt;m_array=NULL;</span><br><span class="line">		this-&gt;m_file=<span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;	</span><br><span class="line">		file &gt;&gt; ch; </span><br><span class="line">		<span class="keyword">if</span>(file.eof())</span><br><span class="line">		&#123;</span><br><span class="line">			this-&gt;sum=0;</span><br><span class="line">			this-&gt;m_array=NULL;</span><br><span class="line">			this-&gt;m_file=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			int i=0;</span><br><span class="line">			this-&gt;get_num();</span><br><span class="line">			this-&gt;m_array=new worker * [this-&gt;sum];</span><br><span class="line"> 			int num,id;</span><br><span class="line"> 			string name;</span><br><span class="line">			file.seekg(0);</span><br><span class="line">		 	<span class="keyword">while</span>(file&gt;&gt;num&amp;&amp;file&gt;&gt;name&amp;&amp;file&gt;&gt;id)</span><br><span class="line">		 	&#123;</span><br><span class="line">		 		worker *wk=NULL;</span><br><span class="line">		 				</span><br><span class="line">				 switch(id)</span><br><span class="line">				 &#123;</span><br><span class="line">				 	<span class="keyword">case</span> 1:wk=new boss(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">				 	<span class="keyword">case</span> 2:wk=new manage(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">				 	<span class="keyword">case</span> 3:wk=new employee(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">				 	default:cout &lt;&lt;<span class="string">"读取数据错误！"</span>&lt;&lt;endl; </span><br><span class="line">				 &#125;</span><br><span class="line">				</span><br><span class="line">				 this-&gt;m_array[i]=wk;</span><br><span class="line">				 i++;</span><br><span class="line">			 &#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	file.close(); </span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">workmanage::~workmanage()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(this-&gt;m_array!=NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		delete[] m_array;</span><br><span class="line">		this-&gt;m_array=NULL;</span><br><span class="line">	 &#125; </span><br><span class="line">&#125;</span><br><span class="line">void workmanage::show_menu()</span><br><span class="line"> &#123;</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"--------------------------------------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"-------------------欢迎光临-----------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------1.增加职工人数---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------2.显示职工信息---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------3.删除职工信息---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------4.修改职工信息---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------5.职工信息排序---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------6.清空职工信息---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------7.查找职工信息---------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"---------------0.退出系统-------------------------"</span>&lt;&lt;endl;	</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"--------------------------------------------------"</span>&lt;&lt;endl;		</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::exit_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	<span class="built_in">exit</span>(0);</span><br><span class="line"> 	system(<span class="string">"pause"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::add_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	int ch=0,i,num,id;</span><br><span class="line">	string name;  </span><br><span class="line"> 	cout&lt;&lt;<span class="string">"请输入要增加的职工人数："</span>;</span><br><span class="line"> 	cin &gt;&gt; ch;</span><br><span class="line"> 	</span><br><span class="line"> 	worker **array=new worker*[this-&gt;sum+ch];</span><br><span class="line"> 	<span class="keyword">if</span>(this-&gt;m_array!=NULL)</span><br><span class="line">	 &#123;</span><br><span class="line">	 	<span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line">	 	&#123;</span><br><span class="line">	 		array[i]=this-&gt;m_array[i];</span><br><span class="line">		 &#125;</span><br><span class="line">	&#125;</span><br><span class="line"> 	<span class="keyword">for</span>(i=0;i&lt;ch;i++)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout &lt;&lt;<span class="string">"请输入第"</span>&lt;&lt;i+1&lt;&lt;<span class="string">"个的职工编号："</span>;</span><br><span class="line">		cin &gt;&gt;  num;</span><br><span class="line">		</span><br><span class="line">		cout &lt;&lt;<span class="string">"请输入第"</span>&lt;&lt;i+1&lt;&lt;<span class="string">"个的职工姓名："</span>;</span><br><span class="line">		cin &gt;&gt;  name;</span><br><span class="line">		</span><br><span class="line">		cout &lt;&lt;<span class="string">"请输入第"</span>&lt;&lt;i+1&lt;&lt;<span class="string">"个的职工部门："</span>&lt;&lt;endl;</span><br><span class="line">		cout &lt;&lt;<span class="string">"1. 老板"</span>&lt;&lt;endl;</span><br><span class="line">		cout &lt;&lt;<span class="string">"2. 经理"</span>&lt;&lt;endl;</span><br><span class="line">		cout &lt;&lt;<span class="string">"3. 普通员工"</span>&lt;&lt;endl;</span><br><span class="line">		cin &gt;&gt;  id;</span><br><span class="line">		</span><br><span class="line">		worker *wk=NULL;</span><br><span class="line">		switch(id)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">case</span> 1:wk=new boss(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">			<span class="keyword">case</span> 2:wk=new manage(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">			<span class="keyword">case</span> 3:wk=new employee(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">			default: cout&lt;&lt;<span class="string">"输入错误！"</span>&lt;&lt;endl;<span class="built_in">return</span>;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">			</span><br><span class="line"> 		array[this-&gt;sum+i]=wk;</span><br><span class="line">	 &#125;</span><br><span class="line">	 delete[] this-&gt;m_array;</span><br><span class="line">	 this-&gt;m_array=array;</span><br><span class="line">	 this-&gt;sum=this-&gt;sum+ch;</span><br><span class="line">	 this-&gt;save_xt();</span><br><span class="line">	 cout &lt;&lt;<span class="string">"添加完毕！"</span>&lt;&lt;endl;</span><br><span class="line">	 </span><br><span class="line"> 	</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> void workmanage::show_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	int i;</span><br><span class="line"> 	//this-&gt;read_xt();</span><br><span class="line"> 	<span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 	 this-&gt;m_array[i]-&gt;show();</span><br><span class="line"> 	&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> void workmanage::save_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	ofstream file;</span><br><span class="line"> 	int i;</span><br><span class="line"> 	file.open(FILENAME,ios::out);</span><br><span class="line"> 	<span class="keyword">if</span>(!file.is_open())</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout&lt;&lt;<span class="string">"文件打开失败！"</span>&lt;&lt;endl;</span><br><span class="line"> 		<span class="built_in">return</span>;</span><br><span class="line">	 &#125;</span><br><span class="line">	 </span><br><span class="line">	 <span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>( this-&gt;m_array[i]!=NULL)</span><br><span class="line">			&#123;</span><br><span class="line">			file &lt;&lt; this-&gt;m_array[i]-&gt;m_num &lt;&lt; <span class="string">' '</span></span><br><span class="line">				 &lt;&lt; this-&gt;m_array[i]-&gt;m_name &lt;&lt; <span class="string">' '</span></span><br><span class="line">			 	 &lt;&lt; this-&gt;m_array[i]-&gt;m_id &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		file.close();</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::read_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	ifstream file;</span><br><span class="line"> 	int i=0;</span><br><span class="line"> 	int num,id;</span><br><span class="line"> 	string name;</span><br><span class="line"> 	file.open(FILENAME,ios::<span class="keyword">in</span>);</span><br><span class="line"> 	<span class="keyword">if</span>(!file.is_open())</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout&lt;&lt;<span class="string">"文件打开失败！"</span>&lt;&lt;endl;</span><br><span class="line"> 		<span class="built_in">return</span>;</span><br><span class="line">	 &#125;</span><br><span class="line">	 worker **array=new worker*[3];</span><br><span class="line"> 	<span class="keyword">while</span>(file&gt;&gt;num&amp;&amp;file&gt;&gt;name&amp;&amp;file&gt;&gt;id)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		worker *wk=NULL;</span><br><span class="line">		 switch(id)</span><br><span class="line">		 &#123;</span><br><span class="line">		 	<span class="keyword">case</span> 1:wk=new boss(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">		 	<span class="keyword">case</span> 2:wk=new manage(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">		 	<span class="keyword">case</span> 3:wk=new employee(num,name,id);<span class="built_in">break</span>;</span><br><span class="line">		 	default:cout &lt;&lt;<span class="string">"读取数据错误！"</span>&lt;&lt;endl; </span><br><span class="line">		 &#125;</span><br><span class="line">		</span><br><span class="line">		 array[i]=wk;</span><br><span class="line">		 i++;</span><br><span class="line">	 &#125;</span><br><span class="line">	 this-&gt;m_array=array;</span><br><span class="line">	 this-&gt;sum=i;</span><br><span class="line">	 file.close();</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::get_num()</span><br><span class="line"> &#123;</span><br><span class="line"> 	ifstream file;</span><br><span class="line"> 	int i=0;</span><br><span class="line"> 	int num,id;</span><br><span class="line"> 	string name;</span><br><span class="line"> 	file.open(FILENAME,ios::<span class="keyword">in</span>);</span><br><span class="line"> 	<span class="keyword">if</span>(!file.is_open())</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout&lt;&lt;<span class="string">"文件打开失败！"</span>&lt;&lt;endl;</span><br><span class="line"> 		<span class="built_in">return</span>;</span><br><span class="line">	 &#125;</span><br><span class="line"> 	<span class="keyword">while</span>(file&gt;&gt;num&amp;&amp;file&gt;&gt;name&amp;&amp;file&gt;&gt;id)</span><br><span class="line"> 	&#123;</span><br><span class="line">		 i++;</span><br><span class="line">	 &#125;</span><br><span class="line"></span><br><span class="line">	 this-&gt;sum=i;</span><br><span class="line">	 file.close();</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::sort_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	int i,j;</span><br><span class="line"> 	worker *wk=NULL;</span><br><span class="line"> 	<span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line">	 &#123;</span><br><span class="line">	 	<span class="keyword">for</span>(j=0;j&lt;this-&gt;sum-i-1;j++)</span><br><span class="line">	 	<span class="keyword">if</span>(this-&gt;m_array[j]-&gt;m_num&gt;this-&gt;m_array[j+1]-&gt;m_num)</span><br><span class="line">	 	&#123;</span><br><span class="line">			wk=this-&gt;m_array[j];</span><br><span class="line">			this-&gt;m_array[j]=this-&gt;m_array[j+1];</span><br><span class="line">			this-&gt;m_array[j+1]=wk;</span><br><span class="line">		 &#125;</span><br><span class="line">	 &#125;</span><br><span class="line">	 this-&gt;show_xt();</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::clear_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	cout&lt;&lt;<span class="string">"是否清空？：是(Y)/否（N）"</span>&lt;&lt;endl;</span><br><span class="line">	char ch;</span><br><span class="line">	int i;</span><br><span class="line">	cin &gt;&gt;ch;</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'y'</span>||ch==<span class="string">'Y'</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		ofstream file(FILENAME,ios::trunc);</span><br><span class="line">		file.close();</span><br><span class="line">		<span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(this-&gt;m_array[i]!=NULL)</span><br><span class="line">				delete this-&gt;m_array[i];</span><br><span class="line">		&#125;</span><br><span class="line">		delete[] this-&gt;m_array;</span><br><span class="line">		this-&gt;sum=0;</span><br><span class="line">		this-&gt;m_file=<span class="literal">true</span>; </span><br><span class="line">		this-&gt;m_array=NULL;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt;<span class="string">"清空失败！"</span>&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> void workmanage::find_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	int num,i,n=0;</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"请输入要查找职工的编号："</span>;</span><br><span class="line">	cin &gt;&gt; num; </span><br><span class="line">	<span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(this-&gt;m_array[i]-&gt;m_num==num)</span><br><span class="line">		&#123;</span><br><span class="line">			cout &lt;&lt;<span class="string">"查找到该职工！"</span>&lt;&lt;endl;</span><br><span class="line">			this-&gt;m_array[i]-&gt;show();</span><br><span class="line">			n=1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"> 	<span class="keyword">if</span>(n!=1)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout&lt;&lt;<span class="string">"未查找到该职工！"</span>&lt;&lt;endl;</span><br><span class="line">	 &#125;</span><br><span class="line"> 	</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void  workmanage::delete_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"请输入要删除职工的编号："</span>;</span><br><span class="line"> 	int num,j,i,n;</span><br><span class="line">	cin &gt;&gt; num;</span><br><span class="line">	<span class="keyword">for</span>(i=0;i&lt;this-&gt;sum;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(this-&gt;m_array[i]-&gt;m_num==num)</span><br><span class="line">		&#123;</span><br><span class="line">			cout &lt;&lt;<span class="string">"查找到该职工！"</span>&lt;&lt;endl;</span><br><span class="line">			this-&gt;m_array[i]-&gt;show();</span><br><span class="line">			n=1;</span><br><span class="line">			<span class="built_in">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"> 	<span class="keyword">if</span>(n!=1)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout&lt;&lt;<span class="string">"未查找到该职工！"</span>&lt;&lt;endl;</span><br><span class="line">	 &#125;</span><br><span class="line">	 <span class="keyword">else</span></span><br><span class="line">	 &#123;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(i==this-&gt;sum-1)</span><br><span class="line">			&#123;</span><br><span class="line">				delete this-&gt;m_array[this-&gt;sum-1];</span><br><span class="line">				this-&gt;m_array[this-&gt;sum-1]=NULL;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(j=i;j&lt;this-&gt;sum-1;j++)</span><br><span class="line">					&#123;</span><br><span class="line">						this-&gt;m_array[j]=this-&gt;m_array[j+1];</span><br><span class="line">					&#125;</span><br><span class="line">				//delete this-&gt;m_array[this-&gt;sum-1];</span><br><span class="line">				this-&gt;m_array[this-&gt;sum-1]=NULL;</span><br><span class="line">			&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">			this-&gt;sum--;</span><br><span class="line">	 &#125;</span><br><span class="line"> 	</span><br><span class="line"> 	this-&gt;save_xt();</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"删除成功！"</span>&lt;&lt;endl;</span><br><span class="line"> 	</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> void workmanage::update_xt()</span><br><span class="line"> &#123;</span><br><span class="line"> 	cout &lt;&lt;<span class="string">"请输入要修改职工的编号："</span>;</span><br><span class="line"> 	int num,j,i=0,n=0,a[3]=&#123;0&#125;,id;</span><br><span class="line"> 	string name;</span><br><span class="line"> 	char ch=<span class="string">' '</span>;</span><br><span class="line"> 	worker *wk=NULL;</span><br><span class="line">	cin &gt;&gt; num;</span><br><span class="line">	<span class="keyword">for</span>(j=0;j&lt;this-&gt;sum;j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(this-&gt;m_array[j]-&gt;m_num==num)</span><br><span class="line">		&#123;</span><br><span class="line">			cout &lt;&lt;<span class="string">"查找到该职工！"</span>&lt;&lt;endl;</span><br><span class="line">			this-&gt;m_array[j]-&gt;show();</span><br><span class="line">			n=1;</span><br><span class="line">			<span class="built_in">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"> 	<span class="keyword">if</span>(n!=1)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout&lt;&lt;<span class="string">"未查找到该职工！"</span>&lt;&lt;endl;</span><br><span class="line">	 &#125;</span><br><span class="line">	 <span class="keyword">else</span></span><br><span class="line"> 	&#123;</span><br><span class="line"> 		cout &lt;&lt;<span class="string">"1,职工编号"</span>&lt;&lt;endl &lt;&lt;<span class="string">"2.职工姓名"</span> &lt;&lt;endl &lt;&lt;<span class="string">"3.职工部门"</span>&lt;&lt;endl; </span><br><span class="line"> 		cout &lt;&lt;<span class="string">"请输入要修改的项目：（可多选，用空格隔开）"</span>;</span><br><span class="line"> 		<span class="keyword">while</span>(ch==<span class="string">' '</span>&amp;&amp;i&lt;3)</span><br><span class="line"> 		&#123;</span><br><span class="line"> 			cin &gt;&gt;a[i];</span><br><span class="line"> 			ch = getchar();</span><br><span class="line"> 			i++;</span><br><span class="line">		 &#125;</span><br><span class="line">		 i=0;</span><br><span class="line">		<span class="keyword">while</span>(i&lt;3)</span><br><span class="line">		&#123;</span><br><span class="line">			switch(a[i])</span><br><span class="line">			&#123;	</span><br><span class="line">				<span class="keyword">case</span> 1:</span><br><span class="line">					cout &lt;&lt;<span class="string">"请输入修改后的职工编号："</span>;</span><br><span class="line">					cin &gt;&gt; num;</span><br><span class="line">					this-&gt;m_array[j]-&gt;m_num=num;</span><br><span class="line">					<span class="built_in">break</span>;</span><br><span class="line">				<span class="keyword">case</span> 2:</span><br><span class="line">					cout &lt;&lt;<span class="string">"请输入修改后的职工名称："</span>;</span><br><span class="line">					cin &gt;&gt; name;</span><br><span class="line">					this-&gt;m_array[j]-&gt;m_name=name;</span><br><span class="line">					<span class="built_in">break</span>;</span><br><span class="line">				<span class="keyword">case</span> 3:</span><br><span class="line">					cout &lt;&lt;<span class="string">"请输入修改后的职工部门："</span>&lt;&lt;endl;</span><br><span class="line">					cout &lt;&lt;<span class="string">"1.老板"</span>&lt;&lt;endl &lt;&lt;<span class="string">"2.经理"</span>&lt;&lt;endl&lt;&lt;<span class="string">"3.普通员工"</span>&lt;&lt;endl;</span><br><span class="line">					cin &gt;&gt; id;</span><br><span class="line">					<span class="keyword">if</span>(id == 1)</span><br><span class="line">					&#123;</span><br><span class="line">						wk=new boss(this-&gt;m_array[j]-&gt;m_num,this-&gt;m_array[j]-&gt;m_name,id); </span><br><span class="line">					 &#125;<span class="keyword">else</span> <span class="keyword">if</span>(id == 2)</span><br><span class="line">					 &#123;</span><br><span class="line">					 	wk=new manage(this-&gt;m_array[j]-&gt;m_num,this-&gt;m_array[j]-&gt;m_name,id); </span><br><span class="line">					 &#125;</span><br><span class="line">					 <span class="keyword">else</span> <span class="keyword">if</span>(id == 3)</span><br><span class="line">					 &#123;</span><br><span class="line">					 	wk=new employee(this-&gt;m_array[j]-&gt;m_num,this-&gt;m_array[j]-&gt;m_name,id); </span><br><span class="line">					 &#125;</span><br><span class="line">					 <span class="keyword">else</span></span><br><span class="line">					 &#123;</span><br><span class="line">					 	cout &lt;&lt; <span class="string">"输入错误"</span>&lt;&lt;endl;</span><br><span class="line">						<span class="built_in">return</span>; </span><br><span class="line">					 &#125;</span><br><span class="line">					this-&gt;m_array[j]=wk;</span><br><span class="line"> 					<span class="built_in">break</span>;</span><br><span class="line">				<span class="keyword">case</span> 0:<span class="built_in">break</span>;</span><br><span class="line">				default:cout &lt;&lt;<span class="string">"输入错误！"</span> &lt;&lt;endl;<span class="built_in">return</span>; </span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">	 &#125; </span><br><span class="line">	 this-&gt;save_xt();</span><br><span class="line">	 cout &lt;&lt;<span class="string">"修改成功"</span> &lt;&lt;endl; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>-C/C++项目</tag>
      </tags>
  </entry>
</search>
